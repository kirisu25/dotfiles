[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
    let g:airline#extensions#tabline#enabled = 1
    let g:airline_theme = 'tender'
'''

[[plugins]]
repo = 'jacoborus/tender.vim'
hook_add = '''
    " If you have vim >=8.0 or Neovim >= 0.1.5
    if (has("termguicolors"))
     set termguicolors
    endif

    " For Neovim 0.1.3 and 0.1.4
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1

    " Theme
    syntax enable
    colorscheme tender
'''

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'lambdalisue/fern.vim'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
merged = '0'
hoke_add = '''
    set signcolumn=yes
    set pumblend=8
    " Use `[g` and `]g` to navigate diagnostics
    " Use `:CocDiagnostics` to get all diagnostics of current buffer in location list
    nmap <silent> [g <Plug>(coc-diagnostic-prev)
    nmap <silent> ]g <Plug>(coc-diagnostic-next)

    " GoTo code navigation
    nmap <silent> gd <Plug>(coc-definition)
    nmap <silent> gy <Plug>(coc-type-definition)
    nmap <silent> gi <Plug>(coc-implementation)
    nmap <silent> gr <Plug>(coc-references)

    "User setting
    nmap <silent><Leader>fmt :call CocAction("format")<CR>
    nmap <silent><Leader>import :call CocAction("organizeImport")<CR>
    
'''

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'ryicoh/deepl.vim'
hook_add = '''
let g:deepl#endpoint = "https://api-free.deepl.com/v2/translate"
let g:deepl#auth_key = $DEEPL_API_KEY
vmap zj <Cmd>call deepl#v("JA")<CR>
vmap ze <Cmd>call deepl#v("EN")<CR>
nmap zj yypV<Cmd>call deepl#v("JA")<CR>
nmap ze yypV<Cmd>call deepl#v("EN")<CR>
'''

[[plugins]]
repo = 'voldikss/vim-translate-me'
hook_add = '''
let g:translator_target_lang = 'ja'
let g:translator_default_engines = ['google']
nmap <C-t> :TranslateW<CR>
vmap <C-t> :TranslateW<CR>
'''
