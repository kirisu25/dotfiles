" ---------------
" dpp.vim settings
" ---------------
const s:dpp_base = '$XDG_CACHE_HOME/dpp/'

const s:dpp_src = s:dpp_base . 'repos/github.com/Shougo/dpp.vim'
if &runtimepath !~# 'dpp.vim'
  if !isdirectory(s:dpp_src)
    execute '!git clone https://github.com/Shougo/dpp.vim' s:dpp_src
  endif
  execute 'set runtimepath^=' . s:dpp_src
endif

const s:denops_src = s:dpp_base . 'repos/github.com/vim-denops/denops.vim'

 "" dein.vim settings {{{
 "" install dir {{{
 "let s:dein_dir = expand('~/.cache/dein')
 "let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'
 "" }}}
 "
 "" dein installation check {{{
 "if &runtimepath !~# '/dein.vim'
 "  if !isdirectory(s:dein_repo_dir)
 "    execute '!git clone https://github.com/Shougo/dein.vim' s:dein_repo_dir
 "  endif
 "  execute 'set runtimepath^=' . s:dein_repo_dir
 "endif
 "" }}}
 "
 "" begin settings {{{
 "if dein#load_state(s:dein_dir)
 "  call dein#begin(s:dein_dir)
 "
 "  " .toml file
 "  let s:rc_dir = expand('~/.vim')
 "  if !isdirectory(s:rc_dir)
 "    call mkdir(s:rc_dir, 'p')
 "  endif
 "  let s:toml = s:rc_dir . '/dein.toml'
 "
 "  " read toml and cache
 "  call dein#load_toml(s:toml, {'lazy': 0})
 "
 "  " end settings
 "  call dein#end()
 "  call dein#save_state()
 "endif
 "" }}}
 "
 "" plugin installation check {{{
 "if dein#check_install()
 "  call dein#install()
 "endif
 "" }}}
 "
 "" plugin remove check {{{
 "let s:removed_plugins = dein#check_clean()
 "if len(s:removed_plugins) > 0
 "  call map(s:removed_plugins, "delete(v:val, 'rf')")
 "  call dein#recache_runtimepath()
 "endif
 "" }}}

runtime! init/*.vim
